{
    "contents" : "#' Rank-based tests for general factorial designs\n#' \n#' The package provides the Wald-type as well as the ANOVA-type statistic \n#' for rank-based factorial designs, i.e., even for ordinal data.  It is\n#' implemented for crossed designs and allows\n#' for an arbitrary number of factor combinations as well as different sample\n#' sizes.\n#' \n#' @param formula A model \\code{\\link{formula}} object. The left hand side\n#'    contains the response variable and the right hand side contains the factor\n#'    variables of interest. An interaction term must be specified.\n#' @param data A data.frame, list or environment containing the variables in \n#'    \\code{formula}. The default option is \\code{NULL}.\n#' @param alpha A number specifying the significance level; the default is 0.05.\n#' @param CI.method Either \"Logit\" or \"Normal\", specifying the method used for\n#'    calculation of the confidence intervals.\n#' @param effect Should the weighted or unweighted effects be calculated?\n#' @param hypothesis The null hypothesis to test, either \"H0F\" or \"H0p\".\n#' @param Factor.Information Logical. If TRUE, descriptive statistics for \n#'    the different factor level combinations is printed.\n\n#' @details The rankFD() function calculates the Wald-type statistic (WTS) and the ANOVA-type \n#' statistic (ATS) for general factorial designs for testing the null hypotheses \\eqn{H_0^F: CF = 0}\n#' (cf. Akritas et al. (1997) for the WTS and Brunner et al. (1997) for the ATS) based on weighted effect measures,\n#' and \\eqn{H_0^p: Cp = 0} for the vector of unweighted treatment effects as described in Brunner et al. (2016).\n#' In the latter paper, the CIs for the unweighted effects (\\eqn{p_i} in their notation) are described and \n#' CIs for the weighted effects (\\eqn{r_i} in their notation) are obtained\n#' similarly.\n#'   \n#' @return An \\code{rankFD} object containing the following components:\n#' \\item{Descriptive}{Some descriptive statistics of the data for all factor\n#'    level combinations. Displayed are the number of individuals per factor\n#'    level combination (size), the relative effect (pd), variance and 100*(1-alpha)\\% confidence\n#'    intervals.}\n#'  \\item{WTS}{The value of the WTS along with degrees of freedom of the central chi-square distribution and p-value}\n#'  \\item{ATS}{The value of the ATS, degrees of freedom of the central F distribution and the corresponding p-value.}\n#' \n#' @examples\n#' data(Coal)\n#' model <- rankFD(Acidity ~ NaOH * Type, data = Coal, CI.method = \"Normal\",\n#' effect = \"unweighted\", hypothesis = \"H0F\")\n#' \n#' data(Muco)\n#' model.oneway <- rankFD(HalfTime ~ Disease, data = Muco, CI.method = \"Logit\",\n#' effect = \"weighted\", hypothesis = \"H0p\")\n#' plot(model.oneway)\n#' \n#' \n#' @references Brunner, E., Konietschke, F., Pauly, M. and Puri, M.L. (2016). \n#' Rank-Based Procedures in Factorial Designs: Hypotheses about Nonparametric Treatment Effects. arXiv:1606.03973\n#' \n#' Akritas, M. G., Arnold, S. F., and Brunner, E. (1997). Nonparametric hypotheses and rank statistics for unbalanced factorial designs.\n#' Journal of the American Statistical Association 92, 258-265.\n#' \n#' Brunner, E., Dette, H., and Munk, A. (1997). Box-Type Approximations in Nonparametric Factorial Designs. Journal\n#' of the American Statistical Association 92, 1494-1502.\n\n#' \n#'\n#' @importFrom lattice xyplot panel.superpose panel.arrows panel.points panel.xyplot\n#' @importFrom stats formula model.frame pchisq pf qnorm terms var aggregate as.formula confint cov median pnorm pt qt quantile sd\n#' @importFrom utils read.table\n#' @importFrom MASS ginv\n#' @importFrom Matrix rankMatrix\n#' @importFrom coin wilcox_test pvalue statistic\n#' @importFrom graphics abline axis box plot points polygon title\n#' \n#' @export\n\n\n\nrankFD <- function(formula, data,alpha=0.05, CI.method=c(\"Logit\",\"Normal\"),\n                     effect=c(\"unweighted\",\"weighted\"),hypothesis=c(\"H0F\",\"H0p\"),\n                    Factor.Information=FALSE){\n  \n  effect=match.arg(effect)\n  hypothesis = match.arg(hypothesis)\n  CI.method = match.arg(CI.method)\n\n  #-------- Determine the model------#\n  \n  dat.Model0 <- model.frame(formula, data)\n  \n  #--------Numbers of factors---------#\n  \n  for(i in length(dat.Model0):2) dat.Model0[,i] <-as.factor(dat.Model0[,i])\n  nf = ncol(dat.Model0)-1\n  \n  n.levels = c()\n  names.levels=list()\n  \n  for (i in 2:(nf+1)){n.levels[i-1]= nlevels(dat.Model0[,i])\n                      names.levels[[i-1]] = levels(dat.Model0[,i])\n  }\n  names(names.levels) <- names(dat.Model0[,2:(nf+1)])\n  \n  \n  #-------------Hypotheses matrices--------#\n\n  perm_names <- t(attr(terms(formula), \"factors\")[-1, ])\n  nr_hypo <- attr(terms(formula), \"factors\")\n  fac_names <- colnames(nr_hypo)\n  Hypotheses0 = HC(n.levels,\"Hyp\",perm_names,fac_names)\n  Hypotheses=Hypotheses0[[1]]\n  CI.Matrices = HC(n.levels,\"CI\",perm_names,fac_names)[[1]]\n  \n  \n  n.hypotheses = length(Hypotheses)\n  n.levels.prod=prod(n.levels)\n  #Output.names <- attr(terms(formula), \"term.labels\")\n  Output.names <- Hypotheses0[[2]]\n  \n  #-------Sort Data according to Factors------#\n  for (i in length(dat.Model0):2) {\n    dat.Model0 <- dat.Model0[order(dat.Model0[,i]),]}\n  \n  #-----------------Introduce Pseudo Factor -----#\n  dat.Model0$Interaction = interaction(dat.Model0[,2:length(dat.Model0)],sep=\":\")\n  dat.response <- dat.Model0[,1]\n  \n  #----------------Compute means and variances etc---------#\n  n <- aggregate(formula,data=dat.Model0,length)\n  for(i in (length(n)-1):1) {\n    n <-n[order(n[,i]),]\n  }\n  colnames(n)[ncol(n)]<-\"Size\"\n  \n  #-------------Compute Inference Methods------#\n  dat.Model0$INum <- as.factor(rep(1:n.levels.prod, n$Size))\n  \n  \n  #--------------Compute the relative Effects----#\n  H0pW <-Effects(dat.response, dat.Model0$INum,effect)\n  n$pd <- c(H0pW$pd)\n  n$Var <- c(diag(H0pW$VBF))\n  \n  \n  CI <- Limits(c(H0pW$pd),H0pW$VBF,alpha,c(H0pW$N))\n  n$L.Normal <- CI$Normal[,1]\n  n$U.Normal <- CI$Normal[,2]\n  n$L.Logit <- CI$Logit[,1]\n  n$U.Logit <- CI$Logit[,2]\n  \n  WTS = matrix(0,n.hypotheses,3)\n  ATS = matrix(0,n.hypotheses, 4)\n  ATSp = matrix(0,n.hypotheses,4)\n  Descriptive.Factors = list()\n  Levels.Factors = list()\n  \n  \n  for(i in 1:n.hypotheses){\n    \n    \n    WTS[i,] = Wald(c(H0pW$pd),Hypotheses[[i]],H0pW$VH0F)\n    ATS[i,] =ANOVATYP(c(H0pW$pd),Hypotheses[[i]],H0pW$VH0F,n$Size)\n    ATSp[i,]= ANOVATYPH0P(c(H0pW$pd),Hypotheses[[i]],H0pW$VBF,n$Size,H0pW$dfATS)\n    CILimits <-Limits(c(CI.Matrices[[i]]%*%c(H0pW$pd)),CI.Matrices[[i]]%*%H0pW$VBF%*%t(CI.Matrices[[i]]),alpha,H0pW$N)\n    \n    Descriptives <-data.frame(pd=CI.Matrices[[i]]%*%n$pd,\n                              Var= c(diag(CI.Matrices[[i]]%*%H0pW$VBF%*%t(CI.Matrices[[i]]))),\n                              L.Normal=CILimits$Normal[,1],\n                              U.Normal = CILimits$Normal[,2],\n                              L.Logit = CILimits$Logit[,1],\n                              U.Logit = CILimits$Logit[,2])\n    Output.namesi <-Output.names[i] \n    formula.act <- as.formula(paste(names(dat.Model0)[1], Output.namesi, sep=\" ~ \"))\n    aha <- data.frame(aggregate(formula.act,data=dat.Model0,mean))\n    \n    for(ii in (length(aha)-1):1) {aha <-aha[order(aha[,ii]),]}\n    Descriptive.Factors[[i]] <-data.frame(aha,Descriptives)\n    Descriptive.Factors[[i]] <-Descriptive.Factors[[i]][,-length(aha)]\n    if(length(grep(\":\", Output.names[i]))<1){\n      pos <- which(names(dat.Model0)==Output.names[i])\n      Levels.Factors[[i]] = data.frame(X=levels(dat.Model0[,pos]))\n    }\n    \n    if(length(grep(\":\", Output.names[i]))>=1){\n      facs.singles <- c(strsplit(Output.names[i], \":\")[[1]])\n      \n      Levels.Factors[[i]] = data.frame(n[,facs.singles])\n      \n      \n    }\n  }\n  \n  names(Descriptive.Factors) <- Output.names\n  \n  rownames(WTS) <- Output.names\n  rownames(ATS) <- Output.names\n  rownames(ATSp)<- Output.names\n  colnames(WTS) <- c(\"Statistic\", \"df\", \"p-Value\")\n  colnames(ATS) <- c(\"Statistic\", \"df1\", \"df2\", \"p-Value\")\n  colnames(ATSp) <- c(\"Statistic\", \"df1\", \"df2\", \"p-Value\")\n\n  \n  if(hypothesis==\"H0F\"){\n    result <- list(Descriptive=n, Wald.Type.Statistic = WTS, ANOVA.Type.Statistic=ATS)\n  }\n  \n  if(hypothesis==\"H0p\"){\n    result <- list(Descriptive=n,  ANOVA.Type.Statistic=ATSp)\n  } \n  class(result) <- \"rankFD\"\n\n  result$plotting <- list(nf = nf, fac_names = fac_names, n.hypotheses = n.hypotheses,\n                          Descriptive.Factors = Descriptive.Factors, CI.method = CI.method)\n  if (Factor.Information==TRUE){\n    print(Descriptive.Factors)\n  }\n  return(result)\n}\n\n",
    "created" : 1461739646710.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2367168998",
    "id" : "F4520BB8",
    "lastKnownWriteTime" : 1467116792,
    "path" : "~/Dropbox/rankFD/rankFD/R/rankFD.R",
    "project_path" : "R/rankFD.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}